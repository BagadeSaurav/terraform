pipeline {
    agent any

    environment {
        AWS_REGION = "us-east-1"
        TF = "terraform"
    }

    stages {

        stage('Checkout') {
            steps {
                echo "Cloning repository..."
                git branch: 'main', url: 'https://github.com/BagadeSaurav/terraform.git'
            }
        }

        stage('Terraform Init') {
            steps {
                echo "‚öô Initializing Terraform..."
                withCredentials([usernamePassword(credentialsId: 'saurav', 
                                                  usernameVariable: 'AWS_ACCESS_KEY_ID', 
                                                  passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                        export AWS_DEFAULT_REGION=${AWS_REGION}
                        ${TF} init
                    '''
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                echo "üìù Planning Terraform changes..."
                withCredentials([usernamePassword(credentialsId: 'saurav', 
                                                  usernameVariable: 'AWS_ACCESS_KEY_ID', 
                                                  passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                        export AWS_DEFAULT_REGION=${AWS_REGION}
                        ${TF} plan -out=tfplan.out
                    '''
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                input message: "‚ö† Proceed with Terraform apply?"
                echo "üöÄ Applying Terraform configuration..."
                withCredentials([usernamePassword(credentialsId: 'saurav', 
                                                  usernameVariable: 'AWS_ACCESS_KEY_ID', 
                                                  passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                        export AWS_DEFAULT_REGION=${AWS_REGION}
                        ${TF} apply -auto-approve tfplan.out
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ Terraform applied successfully!"
        }
        failure {
            echo "‚ùå Pipeline failed!"
        }
    }
}
